region_biobio$ENTIDAD<-as.factor(region_biobio$ENTIDAD)
region_biobio$CATEGORIA<-as.factor(region_biobio$CATEGORIA)
table(region_biobio$CATEGORIA)
table(region_biobio$CATEGORIA ~ region_biobio$`NOMBRE COMUNA`)
table(region_biobio$CATEGORIA, region_biobio$`NOMBRE COMUNA`)
table(region_biobio$`NOMBRE COMUNA`)
length(table(region_biobio$`NOMBRE COMUNA`))
mean(region_biobio$`Número total de personas`[region_biobio$CATEGORIA=="Comunidad Indígena"])
summary(region_biobio$`Número total de personas`[region_biobio$CATEGORIA=="Comunidad Indígena"])
which.max(region_biobio$`Número total de personas`[region_biobio$CATEGORIA=="Comunidad Indígena"])
region_biobio[77]
region_biobio[77,]
region_biobio[77,7]
region_biobio[77,15]
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
sum(region_biobio$PROVINCIA)
colSums(region_biobio$PROVINCIA)
table(region_biobio$PROVINCIA)
sum(table(region_biobio$PROVINCIA))
sum(table(region_biobio$`NOMBRE COMUNA`))
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
table(region_biobio$LOCALIDAD)
table(region_biobio$CATEGORIA)
prop.table(table(region_biobio$CATEGORIA))
prop.table(table(region_biobio$CATEGORIA))*100
prop.table(table(region_biobio$PROVINCIA))
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
x<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
View(x)
summary(x[,2])
which.min(region_biobio$`NOMBRE COMUNA`)
which.min(x$Freq)
which.max(x$Freq)
View(which.min(x$Freq))
View(x[17,]))
View(x[17]))
View(x[,17]))
View(x[,17])
View(x[17,])
View(x[25,])
rm(x)
tabla_frecuencia_comuna<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
View(tabla_frecuencia_comuna[17,])
View(tabla_frecuencia_comuna[25,])
prop.table(table(region_biobio$PROVINCIA))*100
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
View(tabla_frecuencia_comuna[25,])
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
table(region_biobio$CATEGORIA)
prop.table(table(region_biobio$PROVINCIA))*100
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
prop.table(table(region_biobio$CATEGORIA))*100
tabla_frecuencia_comuna<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
View(tabla_frecuencia_comuna[25,])
View(tabla_frecuencia_comuna[17,])
setwd('/home/benja/u/quinto_año/primer_semestre/rural/presentacion/base_ine')
library(readr)
arauco <- read_delim("arauco.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
biobio <- read_delim("biobio.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
concepcion <- read_delim("concepcion.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
region_biobio<-rbind(arauco, biobio, concepcion)
names(region_biobio)
region_biobio$`Total de Mujeres`<-as.numeric(region_biobio$`Total de Mujeres`)
region_biobio$`Total de Hombres`<-as.numeric(region_biobio$`Total de Hombres`)
region_biobio$`Total de personas de 0 a 5 años`<-as.numeric(region_biobio$`Total de personas de 0 a 5 años`)
region_biobio$`Total de personas de 6 a 14 años`<-as.numeric(region_biobio$`Total de personas de 6 a 14 años`)
region_biobio$`Total de personas de 15 a 64 años`<-as.numeric(region_biobio$`Total de personas de 15 a 64 años`)
region_biobio$`Total de personas de 65 y más años`<-as.numeric(region_biobio$`Total de personas de 65 y más años`)
region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`<-as.numeric(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<-as.numeric(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
region_biobio$REGION<-as.factor(region_biobio$REGION)
region_biobio$PROVINCIA<-as.factor(region_biobio$PROVINCIA)
region_biobio$`NOMBRE COMUNA`<-as.factor(region_biobio$`NOMBRE COMUNA`)
region_biobio$LOCALIDAD<-as.factor(region_biobio$LOCALIDAD)
region_biobio$ENTIDAD<-as.factor(region_biobio$ENTIDAD)
region_biobio$CATEGORIA<-as.factor(region_biobio$CATEGORIA)
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
prop.table(table(region_biobio$PROVINCIA))*100
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
tabla_frecuencia_comuna<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
View(tabla_frecuencia_comuna[25,])
View(tabla_frecuencia_comuna[17,])
summary(tabla_frecuencia_comuna)
table(region_biobio$CATEGORIA)
prop.table(table(region_biobio$CATEGORIA))*100
tabla_frecuencia_categoria<-data.frame(prop.table(table(region_biobio$CATEGORIA))*100)
summary(tabla_frecuencia_categoria)
tabla_frecuencia_categoria<-data.frame(prop.table(table(region_biobio$CATEGORIA))*100)
table(region_biobio$CATEGORIA)
prop.table(table(region_biobio$CATEGORIA))*100
tabla_frecuencia_categoria<-data.frame(prop.table(table(region_biobio$CATEGORIA))*100)
summary(tabla_frecuencia_categoria)
View(tabla_frecuencia_comuna)
View(tabla_frecuencia_comuna)
View(tabla_frecuencia_categoria)
which.max(tabla_frecuencia_categoria)
which.max(tabla_frecuencia_categoria[,2])
View(tabla_frecuencia_categoria[10,])
which.min(tabla_frecuencia_categoria[,2])
View(tabla_frecuencia_categoria[3,])
View(region_biobio)
table(region_biobio$`Número total de personas`)
summary(region_biobio$`Número total de personas`)
which.min(region_biobio$`Número total de personas`)
View(region_biobio[14,])
which(region_biobio$`Número total de personas`==0)
x<-which(region_biobio$`Número total de personas`==0)
x
View(region_biobio[x,])
sin_poblacion<-data.frame(region_biobio[x,])
View(sin_poblacion)
summary(sin_poblacion$Total.viviendas)
table(sin_poblacion$NOMBRE.COMUNA)
which.max(sin_poblacion$Total.viviendas)
View(sin_poblacion[32,])
x<-which(region_biobio$`Número total de personas`==0)
sin_poblacion<-data.frame(region_biobio[x,])
table(sin_poblacion$NOMBRE.COMUNA)
table(sin_poblacion$CATEGORIA)
summary(region_biobio$`Número total de personas`)
summary(region_biobio$`Total de Hombres`)
summary(region_biobio$`Total de Mujeres`)
summary(region_biobio$`Total de Hombres`)
summary(region_biobio$`Número total de personas`)
summary(region_biobio$`Total de Hombres`)
summary(region_biobio$`Total de Mujeres`)
y<-which(region_biobio$`Total de Hombres`==NA)
y
y<-which(region_biobio$`Total de Hombres`=='NA')
sum(region_biobio$`Total de Hombres`)
sum(region_biobio$`Total de Hombres`==NA)
sum(region_biobio$`Total de Hombres`=='NA')
y<-filter(region_biobio, region_biobio$`Total de Hombres`==NA)
y<-filter(region_biobio, region_biobio$`Total de Hombres`=='NA')
y
by(region_biobio$`Total de Hombres`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Total de Mujeres`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Total de Hombres`, region_biobio$CATEGORIA, FUN = summary)
by(region_biobio$`Total de Mujeres`, region_biobio$CATEGORIA, FUN = summary)
by(region_biobio$`Número total de personas`, region_biobio$CATEGORIA, FUN = summary)
summary(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
help("table")
is.table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
as.table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`, useNA = c("always"))
as.table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`, useNA = c("always"))
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
sum(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
sum(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`, na.rm = T)
sum(region_biobio$`Total de Mujeres`)
sum(region_biobio$`Total de Mujeres`, na.rm = T)
sum(region_biobio$`Total de Hombres`, na.rm = T)
sum(region_biobio$`Número total de personas`, na.rm = T)
summary(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
quantile(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, 0.75)
quantile(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, 0.75, na.rm = T)
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
quantile(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, 0.75, na.rm = T)
quantile(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, 0.50, na.rm = T)
which(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<=15)
y<-which(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<=15)
indigenas<-region_biobio[y,]
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=1)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<=1)
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`=>1)
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=1)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=2)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=15)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
sum(indigenas$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
table(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
table(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
boxplot(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=4)
View(tabla_frecuencia_categoria)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
sum(indigenas$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
boxplot(indigenas$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
table(indigenas$`NOMBRE COMUNA`)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
prop.table(table(indigenas$CATEGORIA))*100
sum(indigenas$`Total de Hombres`, na.rm = T)
sum(indigenas$`Total de Mujeres`, na.rm = T)
sum(indigenas$`Total de Hombres`, na.rm = T)
sum(indigenas$`Total de Mujeres`, na.rm = T)
z<-filter(region_biobio, region_biobio$`Número total de personas`==0)
setwd('/home/benja/u/quinto_año/primer_semestre/rural/presentacion/base_ine')
library(readr)
arauco <- read_delim("arauco.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
biobio <- read_delim("biobio.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
concepcion <- read_delim("concepcion.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
region_biobio<-rbind(arauco, biobio, concepcion)
names(region_biobio)
region_biobio$`Total de Mujeres`<-as.numeric(region_biobio$`Total de Mujeres`)
region_biobio$`Total de Hombres`<-as.numeric(region_biobio$`Total de Hombres`)
region_biobio$`Total de personas de 0 a 5 años`<-as.numeric(region_biobio$`Total de personas de 0 a 5 años`)
region_biobio$`Total de personas de 6 a 14 años`<-as.numeric(region_biobio$`Total de personas de 6 a 14 años`)
region_biobio$`Total de personas de 15 a 64 años`<-as.numeric(region_biobio$`Total de personas de 15 a 64 años`)
region_biobio$`Total de personas de 65 y más años`<-as.numeric(region_biobio$`Total de personas de 65 y más años`)
region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`<-as.numeric(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<-as.numeric(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
region_biobio$REGION<-as.factor(region_biobio$REGION)
region_biobio$PROVINCIA<-as.factor(region_biobio$PROVINCIA)
region_biobio$`NOMBRE COMUNA`<-as.factor(region_biobio$`NOMBRE COMUNA`)
region_biobio$LOCALIDAD<-as.factor(region_biobio$LOCALIDAD)
region_biobio$ENTIDAD<-as.factor(region_biobio$ENTIDAD)
region_biobio$CATEGORIA<-as.factor(region_biobio$CATEGORIA)
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
prop.table(table(region_biobio$PROVINCIA))*100
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
tabla_frecuencia_comuna<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
summary(tabla_frecuencia_comuna)
View(tabla_frecuencia_comuna[25,])
View(tabla_frecuencia_comuna[17,])
table(region_biobio$CATEGORIA)
prop.table(table(region_biobio$CATEGORIA))*100
tabla_frecuencia_categoria<-data.frame(prop.table(table(region_biobio$CATEGORIA))*100)
summary(tabla_frecuencia_categoria)
View(tabla_frecuencia_categoria[10,])
View(tabla_frecuencia_categoria[3,])
sum(region_biobio$`Número total de personas`, na.rm = T)
sum(region_biobio$`Total de Hombres`, na.rm = T)
sum(region_biobio$`Total de Mujeres`, na.rm = T)
summary(region_biobio$`Número total de personas`)
summary(region_biobio$`Total de Hombres`)
summary(region_biobio$`Total de Mujeres`)
by(region_biobio$`Número total de personas`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Total de Hombres`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Total de Mujeres`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Número total de personas`, region_biobio$CATEGORIA, FUN = summary)
by(region_biobio$`Total de Hombres`, region_biobio$CATEGORIA, FUN = summary)
by(region_biobio$`Total de Mujeres`, region_biobio$CATEGORIA, FUN = summary)
sum(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`, na.rm = T)
summary(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
table(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=4)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
prop.table(table(indigenas$CATEGORIA))*100
sum(indigenas$`Total de Hombres`, na.rm = T)
sum(indigenas$`Total de Mujeres`, na.rm = T)
which.max(prop.table(table(indigenas$`NOMBRE COMUNA`))*100)
which.min(prop.table(table(indigenas$`NOMBRE COMUNA`))*100)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
table(indigenas$`NOMBRE COMUNA`)
prop.table(table(indigenas$CATEGORIA))*100
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
summary(prop.table(table(indigenas$`NOMBRE COMUNA`))*100)
summary(prop.table(table(indigenas$`NOMBRE COMUNA`)))
summary(region_biobio$`Total de viviendas particulares`)
summary(region_biobio$`Total viviendas colectivas`)
summary(region_biobio$`Cantidad de hogares`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Cantidad de hogares`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
hist(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas`)
boxplot(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas`)
which.max(region_biobio$`Total viviendas`)
table(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Cantidad de hogares`)
sum(region_biobio$`Total viviendas`)
sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
sum(region_biobio$`Cantidad de hogares`)
sum(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas`)
sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
sum(region_biobio$`Cantidad de hogares`)
summary(region_biobio$`Cantidad de hogares`)
total_viviendas<-sum(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas`)
viviendas_ocupadas<-sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
total_hogares<-sum(region_biobio$`Cantidad de hogares`)
summary(region_biobio$`Cantidad de hogares`)
viviendas_desocupadas<-c(total_viviendas-total-viviendas_ocupadas)
total_viviendas<-sum(region_biobio$`Total viviendas`)
summary(region_biobio$`Total viviendas`)
viviendas_ocupadas<-sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
total_hogares<-sum(region_biobio$`Cantidad de hogares`)
summary(region_biobio$`Cantidad de hogares`)
viviendas_desocupadas<-c(total_viviendas-viviendas_ocupadas)
total_hogares-viviendas_desocupadas
total_hogares-viviendas_ocupadas
total_viviendas<-sum(region_biobio$`Total viviendas`)
print(total_viviendas)
summary(region_biobio$`Total viviendas`)
viviendas_ocupadas<-sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
total_hogares<-sum(region_biobio$`Cantidad de hogares`)
summary(region_biobio$`Cantidad de hogares`)
viviendas_desocupadas<-c(total_viviendas-viviendas_ocupadas)
sin_vivienda<-c(total_hogares-viviendas_ocupadas)
total_viviendas<-sum(region_biobio$`Total viviendas`)
print(total_viviendas)
summary(region_biobio$`Total viviendas`)
viviendas_ocupadas<-sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
print(viviendas_ocupadas)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
total_hogares<-sum(region_biobio$`Cantidad de hogares`)
print(total_hogares)
summary(region_biobio$`Cantidad de hogares`)
viviendas_desocupadas<-c(total_viviendas-viviendas_ocupadas)
print(viviendas_desocupadas)
sin_vivienda<-c(total_hogares-viviendas_ocupadas)
print(sin_vivienda)
print(sin_vivienda) # sin vivienda
total_viviendas<-sum(region_biobio$`Total viviendas`)
print(total_viviendas)
summary(region_biobio$`Total viviendas`)
viviendas_ocupadas<-sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
print(viviendas_ocupadas)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
total_hogares<-sum(region_biobio$`Cantidad de hogares`)
print(total_hogares)
summary(region_biobio$`Cantidad de hogares`)
viviendas_desocupadas<-c(total_viviendas-viviendas_ocupadas)
print(viviendas_desocupadas)
sin_vivienda<-c(total_hogares-viviendas_ocupadas)
print(sin_vivienda)
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, summary)
by(region_biobio$`Total viviendas`, region_biobio$CATEGORIA, summary)
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, table)
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, sum)
prop.table(table(region_biobio$`Total viviendas`))
prop.table(table(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`))
prop_viviendas_comuna<-prop.table(table(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`))
prop_viviendas_comuna<-data.frame(prop.table(table(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`)))
View(prop_viviendas_comuna)
prop_viviendas_comuna<-data.frame(prop.table(table(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`))*100)
View(prop_viviendas_comuna)
prop_viviendas_comuna<-filter(prop_viviendas_comuna$Freq!=0)
prop_viviendas_comuna<-filter(prop_viviendas_comuna$Freq>0)
prop_viviendas_comuna<-filter(prop_viviendas_comuna, prop_viviendas_comuna$Freq>0)
table(region_biobio$`NOMBRE COMUNA`, region_biobio$`Total viviendas`)
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, sum)->z
z<-data.frame(by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, sum))
by(region_biobio$`Total viviendas`, region_biobio$CATEGORIA, summary)
by(region_biobio$`Total viviendas`, region_biobio$CATEGORIA, sum)
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$CATEGORIA, sum)
by(region_biobio$`Cantidad de hogares`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Cantidad de hogares`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Cantidad de hogares`, region_biobio$ENTIDAD, sum)
by(region_biobio$`Cantidad de hogares`, region_biobio$CATEGORIA, sum)
print("total de viviendas por comuna")
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Total viviendas`, region_biobio$CATEGORIA, sum)
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$CATEGORIA, sum)
by(region_biobio$`Cantidad de hogares`, region_biobio$`NOMBRE COMUNA`, sum)
by(region_biobio$`Cantidad de hogares`, region_biobio$CATEGORIA, sum)
setwd('/home/benja/u/quinto_año/primer_semestre/rural/presentacion/base_ine')
library(readr)
arauco <- read_delim("arauco.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
biobio <- read_delim("biobio.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
concepcion <- read_delim("concepcion.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
region_biobio<-rbind(arauco, biobio, concepcion)
names(region_biobio)
region_biobio$`Total de Mujeres`<-as.numeric(region_biobio$`Total de Mujeres`)
region_biobio$`Total de Hombres`<-as.numeric(region_biobio$`Total de Hombres`)
region_biobio$`Total de personas de 0 a 5 años`<-as.numeric(region_biobio$`Total de personas de 0 a 5 años`)
region_biobio$`Total de personas de 6 a 14 años`<-as.numeric(region_biobio$`Total de personas de 6 a 14 años`)
region_biobio$`Total de personas de 15 a 64 años`<-as.numeric(region_biobio$`Total de personas de 15 a 64 años`)
region_biobio$`Total de personas de 65 y más años`<-as.numeric(region_biobio$`Total de personas de 65 y más años`)
region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`<-as.numeric(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<-as.numeric(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
region_biobio$REGION<-as.factor(region_biobio$REGION)
region_biobio$PROVINCIA<-as.factor(region_biobio$PROVINCIA)
region_biobio$`NOMBRE COMUNA`<-as.factor(region_biobio$`NOMBRE COMUNA`)
region_biobio$LOCALIDAD<-as.factor(region_biobio$LOCALIDAD)
region_biobio$ENTIDAD<-as.factor(region_biobio$ENTIDAD)
region_biobio$CATEGORIA<-as.factor(region_biobio$CATEGORIA)
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
prop.table(table(region_biobio$PROVINCIA))*100
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
tabla_frecuencia_comuna<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
summary(tabla_frecuencia_comuna)
View(tabla_frecuencia_comuna[25,])
View(tabla_frecuencia_comuna[17,])
table(region_biobio$CATEGORIA)
prop.table(table(region_biobio$CATEGORIA))*100
tabla_frecuencia_categoria<-data.frame(prop.table(table(region_biobio$CATEGORIA))*100)
summary(tabla_frecuencia_categoria)
View(tabla_frecuencia_categoria[10,])
View(tabla_frecuencia_categoria[3,])
sum(region_biobio$`Número total de personas`, na.rm = T)
sum(region_biobio$`Total de Hombres`, na.rm = T)
sum(region_biobio$`Total de Mujeres`, na.rm = T)
summary(region_biobio$`Número total de personas`)
summary(region_biobio$`Total de Hombres`)
summary(region_biobio$`Total de Mujeres`)
by(region_biobio$`Número total de personas`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Total de Hombres`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Total de Mujeres`, region_biobio$`NOMBRE COMUNA`, FUN = summary)
by(region_biobio$`Número total de personas`, region_biobio$CATEGORIA, FUN = summary)
by(region_biobio$`Total de Hombres`, region_biobio$CATEGORIA, FUN = summary)
by(region_biobio$`Total de Mujeres`, region_biobio$CATEGORIA, FUN = summary)
sum(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`, na.rm = T)
summary(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
table(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
table(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=4)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
prop.table(table(indigenas$CATEGORIA))*100
sum(indigenas$`Total de Hombres`, na.rm = T)
sum(indigenas$`Total de Mujeres`, na.rm = T)
sin_poblacion<filter(region_biobio, region_biobio$`Número total de personas`==0)
table(sin_poblacion$NOMBRE.COMUNA)
table(sin_poblacion$CATEGORIA)
total_viviendas<-sum(region_biobio$`Total viviendas`)
print(total_viviendas)
summary(region_biobio$`Total viviendas`)
viviendas_ocupadas<-sum(region_biobio$`Total viviendas ocupadas con moradores presentes`)
print(viviendas_ocupadas)
summary(region_biobio$`Total viviendas ocupadas con moradores presentes`)
total_hogares<-sum(region_biobio$`Cantidad de hogares`)
print(total_hogares)
summary(region_biobio$`Cantidad de hogares`)
viviendas_desocupadas<-c(total_viviendas-viviendas_ocupadas)
print(viviendas_desocupadas)
sin_vivienda<-c(total_hogares-viviendas_ocupadas)
print(sin_vivienda)
region_biobio$REGION<-as.factor(region_biobio$REGION)
region_biobio$PROVINCIA<-as.factor(region_biobio$PROVINCIA)
region_biobio$`NOMBRE COMUNA`<-as.factor(region_biobio$`NOMBRE COMUNA`)
region_biobio$LOCALIDAD<-as.factor(region_biobio$LOCALIDAD)
region_biobio$ENTIDAD<-as.factor(region_biobio$ENTIDAD)
region_biobio$CATEGORIA<-as.factor(region_biobio$CATEGORIA)
setwd('/home/benja/u/quinto_año/primer_semestre/rural/presentacion/base_ine')
library(readr)
arauco <- read_delim("arauco.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
biobio <- read_delim("biobio.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
concepcion <- read_delim("concepcion.csv", ";", escape_double = FALSE, comment = "#", trim_ws = TRUE)
region_biobio<-rbind(arauco, biobio, concepcion)
names(region_biobio)
region_biobio$`Total de Mujeres`<-as.numeric(region_biobio$`Total de Mujeres`)
region_biobio$`Total de Hombres`<-as.numeric(region_biobio$`Total de Hombres`)
region_biobio$`Total de personas de 0 a 5 años`<-as.numeric(region_biobio$`Total de personas de 0 a 5 años`)
region_biobio$`Total de personas de 6 a 14 años`<-as.numeric(region_biobio$`Total de personas de 6 a 14 años`)
region_biobio$`Total de personas de 15 a 64 años`<-as.numeric(region_biobio$`Total de personas de 15 a 64 años`)
region_biobio$`Total de personas de 65 y más años`<-as.numeric(region_biobio$`Total de personas de 65 y más años`)
region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`<-as.numeric(region_biobio$`Total personas migrantes que residen habitualmente en el territorio nacional`)
region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`<-as.numeric(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
region_biobio$REGION<-as.factor(region_biobio$REGION)
region_biobio$PROVINCIA<-as.factor(region_biobio$PROVINCIA)
region_biobio$`NOMBRE COMUNA`<-as.factor(region_biobio$`NOMBRE COMUNA`)
region_biobio$LOCALIDAD<-as.factor(region_biobio$LOCALIDAD)
region_biobio$ENTIDAD<-as.factor(region_biobio$ENTIDAD)
region_biobio$CATEGORIA<-as.factor(region_biobio$CATEGORIA)
table(region_biobio$PROVINCIA)
table(region_biobio$`NOMBRE COMUNA`)
prop.table(table(region_biobio$PROVINCIA))*100
prop.table(table(region_biobio$`NOMBRE COMUNA`))*100
tabla_frecuencia_comuna<-data.frame(prop.table(table(region_biobio$`NOMBRE COMUNA`))*100)
summary(tabla_frecuencia_comuna)
View(tabla_frecuencia_comuna[25,])
View(tabla_frecuencia_comuna[17,])
print("total de viviendas por comuna")
by(region_biobio$`Total viviendas`, region_biobio$`NOMBRE COMUNA`, sum)
print("total de vivienad por categoria")
by(region_biobio$`Total viviendas`, region_biobio$CATEGORIA, sum)
print("total de viviendas ocupadas por comuna")
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$`NOMBRE COMUNA`, sum)
print("total de viviedas ocupadas por categoria")
by(region_biobio$`Total viviendas ocupadas con moradores presentes`, region_biobio$CATEGORIA, sum)
print("cantidad de hogares por comuna")
by(region_biobio$`Cantidad de hogares`, region_biobio$`NOMBRE COMUNA`, sum)
print("cantidad de hogares por categorias")
by(region_biobio$`Cantidad de hogares`, region_biobio$CATEGORIA, sum)
sum(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`, na.rm = T)
summary(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
table(region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`)
indigenas<-filter(region_biobio, region_biobio$`Total personas que se consideran pertenecientes a algún pueblo indígena u originario`>=4)
prop.table(table(indigenas$`NOMBRE COMUNA`))*100
prop.table(table(indigenas$CATEGORIA))*100
sum(indigenas$`Total de Hombres`, na.rm = T)
sum(indigenas$`Total de Mujeres`, na.rm = T)
